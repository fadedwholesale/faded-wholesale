# ========================================
# PROMETHEUS CONFIGURATION
# Faded Skies Backend Monitoring
# ========================================

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    environment: 'production'
    service: 'faded-skies-api'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Rule files for alerting
rule_files:
  - "alerts/*.yml"

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']

  # Faded Skies API
  - job_name: 'faded-skies-api'
    static_configs:
      - targets: ['localhost:3001']
    metrics_path: '/metrics'
    scrape_interval: 30s
    scrape_timeout: 10s
    params:
      format: ['prometheus']

  # Node Exporter (system metrics)
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['localhost:9100']
    scrape_interval: 15s

  # Nginx metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['localhost:9113']
    scrape_interval: 15s

  # PostgreSQL metrics
  - job_name: 'postgres'
    static_configs:
      - targets: ['localhost:9187']
    scrape_interval: 30s

  # Redis metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['localhost:9121']
    scrape_interval: 30s

  # PM2 metrics
  - job_name: 'pm2'
    static_configs:
      - targets: ['localhost:3002']
    metrics_path: '/metrics'
    scrape_interval: 30s

# Remote write configuration (for cloud monitoring)
remote_write:
  - url: 'https://prometheus-us-central1.grafana.net/api/prom/push'
    basic_auth:
      username: '${GRAFANA_CLOUD_USER}'
      password: '${GRAFANA_CLOUD_PASSWORD}'
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500

# Storage configuration
storage:
  tsdb:
    retention.time: 30d
    retention.size: 10GB
    path: /var/lib/prometheus

# ========================================
# DOCKER COMPOSE INTEGRATION
# ========================================

# Add to docker-compose.yml:
#
# prometheus:
#   image: prom/prometheus:latest
#   container_name: faded-skies-prometheus
#   restart: unless-stopped
#   ports:
#     - "9090:9090"
#   volumes:
#     - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
#     - ./monitoring/alerts:/etc/prometheus/alerts
#     - prometheus_data:/prometheus
#   command:
#     - '--config.file=/etc/prometheus/prometheus.yml'
#     - '--storage.tsdb.path=/prometheus'
#     - '--web.console.libraries=/etc/prometheus/console_libraries'
#     - '--web.console.templates=/etc/prometheus/consoles'
#     - '--storage.tsdb.retention.time=30d'
#     - '--web.enable-lifecycle'
#     - '--web.enable-admin-api'
#   networks:
#     - fadedskies-network
#
# grafana:
#   image: grafana/grafana:latest
#   container_name: faded-skies-grafana
#   restart: unless-stopped
#   ports:
#     - "3000:3000"
#   environment:
#     - GF_SECURITY_ADMIN_PASSWORD=your-secure-password
#     - GF_USERS_ALLOW_SIGN_UP=false
#   volumes:
#     - grafana_data:/var/lib/grafana
#     - ./monitoring/grafana:/etc/grafana/provisioning
#   networks:
#     - fadedskies-network
#
# node-exporter:
#   image: prom/node-exporter:latest
#   container_name: faded-skies-node-exporter
#   restart: unless-stopped
#   ports:
#     - "9100:9100"
#   volumes:
#     - /proc:/host/proc:ro
#     - /sys:/host/sys:ro
#     - /:/rootfs:ro
#   command:
#     - '--path.procfs=/host/proc'
#     - '--path.rootfs=/rootfs'
#     - '--path.sysfs=/host/sys'
#     - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
#   networks:
#     - fadedskies-network