version: '3.8'

services:
  # Faded Skies Backend API
  api:
    build: .
    container_name: faded-skies-api
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - JWT_SECRET=${JWT_SECRET}
      - DATABASE_URL=postgresql://fadedskies:${DB_PASSWORD}@postgres:5432/fadedskies
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - fadedskies-network
    healthcheck:
      test: ["CMD", "node", "healthcheck.js"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: faded-skies-db
    restart: unless-stopped
    environment:
      - POSTGRES_DB=fadedskies
      - POSTGRES_USER=fadedskies
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --locale=en_US.UTF-8
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - fadedskies-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fadedskies -d fadedskies"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for Session Management
  redis:
    image: redis:7-alpine
    container_name: faded-skies-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - fadedskies-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: faded-skies-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - api
    networks:
      - fadedskies-network

  # Backup Service
  backup:
    image: postgres:15-alpine
    container_name: faded-skies-backup
    restart: "no"
    environment:
      - PGPASSWORD=${DB_PASSWORD}
    volumes:
      - ./backups:/backups
      - ./scripts/backup.sh:/backup.sh
    networks:
      - fadedskies-network
    profiles: ["backup"]
    entrypoint: ["/backup.sh"]

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  fadedskies-network:
    driver: bridge

# ========================================
# USAGE COMMANDS:
# 
# Start all services:
# docker-compose up -d
# 
# View logs:
# docker-compose logs -f api
# 
# Backup database:
# docker-compose --profile backup run backup
# 
# Stop all services:
# docker-compose down
# 
# Full reset:
# docker-compose down -v
# ========================================