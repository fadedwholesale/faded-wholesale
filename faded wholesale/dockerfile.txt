# Multi-stage build for optimized production image
FROM node:18-alpine AS builder

# Set working directory
WORKDIR /app

# Install system dependencies for image processing and building
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    jpeg-dev \
    cairo-dev \
    giflib-dev \
    pango-dev \
    libtool \
    autoconf \
    automake

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Copy source code
COPY . .

# Create necessary directories
RUN mkdir -p uploads/products logs backups ssl public/admin public/portal

# Build application (if you have build scripts)
RUN npm run build || true

# Production stage
FROM node:18-alpine AS production

# Install runtime dependencies
RUN apk add --no-cache \
    curl \
    jpeg \
    cairo \
    giflib \
    pango \
    ttf-freefont \
    && rm -rf /var/cache/apk/*

# Create app user for security
RUN addgroup -g 1001 -S nodejs && \
    adduser -S appuser -u 1001 -G nodejs

# Set working directory
WORKDIR /app

# Copy built application from builder stage
COPY --from=builder --chown=appuser:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=appuser:nodejs /app/package*.json ./
COPY --chown=appuser:nodejs . .

# Create directory structure with proper permissions
RUN mkdir -p uploads/products logs backups ssl public/admin public/portal && \
    chown -R appuser:nodejs uploads logs backups ssl public && \
    chmod -R 755 uploads logs backups ssl public

# Copy HTML templates to public directories
COPY --chown=appuser:nodejs public/admin-template.html public/admin/index.html
COPY --chown=appuser:nodejs public/portal-template.html public/portal/index.html

# Install PM2 for process management
RUN npm install -g pm2

# Expose port
EXPOSE 3000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD curl -f http://localhost:3000/api/health || exit 1

# Switch to non-root user
USER appuser

# Start application with PM2
CMD ["pm2-runtime", "start", "ecosystem.config.js"]

# Alternative: Start with node directly (for debugging)
# CMD ["node", "server.js"]

# Labels for metadata
LABEL maintainer="Faded Skies Development Team <dev@fadedskieswholesale.com>"
LABEL description="Faded Skies Wholesale Platform - Premium THCA B2B Portal"
LABEL version="1.0.0"
LABEL org.opencontainers.image.source="https://github.com/fadedskies/wholesale-platform"